[{"C:\\Users\\vinay\\OneDrive\\Desktop\\React asssignment\\starwar\\src\\reportWebVitals.js":"1","C:\\Users\\vinay\\OneDrive\\Desktop\\React asssignment\\starwar\\src\\App.js":"2","C:\\Users\\vinay\\OneDrive\\Desktop\\React asssignment\\starwar\\src\\components\\Gallery.jsx":"3","C:\\Users\\vinay\\OneDrive\\Desktop\\React asssignment\\starwar\\src\\index.js":"4","C:\\Users\\vinay\\OneDrive\\Desktop\\React asssignment\\starwar\\src\\components\\Search.jsx":"5"},{"size":362,"mtime":1606901135125,"results":"6","hashOfConfig":"7"},{"size":902,"mtime":1607689826638,"results":"8","hashOfConfig":"7"},{"size":2528,"mtime":1607688759845,"results":"9","hashOfConfig":"7"},{"size":546,"mtime":1607612629304,"results":"10","hashOfConfig":"7"},{"size":3117,"mtime":1607697634867,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1inrllw",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"C:\\Users\\vinay\\OneDrive\\Desktop\\React asssignment\\starwar\\src\\reportWebVitals.js",[],"C:\\Users\\vinay\\OneDrive\\Desktop\\React asssignment\\starwar\\src\\App.js",[],"C:\\Users\\vinay\\OneDrive\\Desktop\\React asssignment\\starwar\\src\\components\\Gallery.jsx",[],"C:\\Users\\vinay\\OneDrive\\Desktop\\React asssignment\\starwar\\src\\index.js",[],"C:\\Users\\vinay\\OneDrive\\Desktop\\React asssignment\\starwar\\src\\components\\Search.jsx",["23"],"import React from \"react\";\r\nimport {\r\n  Accordion,\r\n  Card,\r\n  ListGroup,\r\n  Nav,\r\n  Navbar,\r\n  Form,\r\n  FormControl,\r\n \r\n} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport styles from \"../styles/Styles.module.css\";\r\nfunction Search() {\r\n  const [characters, setCharacters] = React.useState([]);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [searchTerm, setSearchTerm] = React.useState('');\r\n  \r\n  React.useEffect(() => {\r\n    const fetchChar = async () => {\r\n      setLoading(true);\r\n      const response = await axios.get(\r\n        `https://swapi.dev/api/people/?search=${searchTerm}`\r\n      );\r\n      setCharacters(response.data.results);\r\n      setLoading(false);\r\n    };\r\n    fetchChar();\r\n  }, [searchTerm]);\r\n  console.log(characters);\r\n  const stars =\r\n    characters &&\r\n    characters.map((star, index) => {\r\n      return (\r\n        <Card key={index}>\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey={`${index}`}\r\n            className={styles.toggle}\r\n          >\r\n            {star.name}\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey={`${index}`}>\r\n            <Card.Body>\r\n              <Card style={{ width: \"18rem\" }}>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>Height : {star.height}</ListGroup.Item>\r\n                  <ListGroup.Item>Mass : {star.mass}</ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    HairColor :{\" \"}\r\n                    {star.hair_color === \"n/a\" ? \"black\" : star.hair_color}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>SkinColor : {star.skin_color}</ListGroup.Item>\r\n                  <ListGroup.Item>EyeColor : {star.eye_color}</ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    BirthYear : {star.birth_color ? 1978 : 1986}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    Gender : {`${star.gender === \"n/a\" ? \"male\" : star.gender}`}\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n        <Navbar.Brand href=\"#home\">STAR-WAR</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"#home\">About</Nav.Link>\r\n          </Nav>\r\n          <Form inline>\r\n            <FormControl\r\n              type=\"text\"\r\n              placeholder=\"Search Name\"\r\n              className=\"mr-sm-2\"\r\n              onChange={event => {setSearchTerm(event.target.value)}}\r\n            />\r\n            \r\n          </Form>\r\n        </Navbar.Collapse>\r\n          </Navbar>\r\n          {(searchTerm === '') ? <span></span> : \r\n            \r\n              <div>\r\n        <Accordion className={styles.accordiondiv}>{stars}</Accordion>\r\n      </div>\r\n          }\r\n    \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n",{"ruleId":"24","severity":1,"message":"25","line":16,"column":10,"nodeType":"26","messageId":"27","endLine":16,"endColumn":17},"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar"]